!function(){function h(a,b){var c;for(c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}function i(){var f,g,h,i,j,d=document.createDocumentFragment();if(this.terminal=document.createElement("div"),this.terminal.id="consoleJsTerminal",this.terminal.className="console-js-terminal "+this.options.theme,f=document.createElement("p"),f.className="intro-text",f.innerHTML=this.options.introText,this.minimizeButton=document.createElement("a"),this.minimizeButton.href="#",this.minimizeButton.className="minimize-button",this.minimizeButton.id="minimizeButton",f.appendChild(this.minimizeButton),this.terminal.appendChild(f),g=document.createElement("p"),g.className="instruction-text",g.innerHTML=this.options.instructionText,this.terminal.appendChild(g),j=document.createElement("div"),j.className="terminal-history-scroll-wrap",i=document.createElement("div"),i.id="terminalHistoryContainer",i.className="terminal-history-container",j.appendChild(i),this.terminal.appendChild(j),h=document.createElement("div"),h.className="terminal-input-container",h.innerHTML="<label for='terminalInput' class='before'>"+this.options.consoleCaret+"</label>",this.inputBox=document.createElement("input"),this.inputBox.type="text",this.inputBox.id="terminalInput",h.appendChild(this.inputBox),this.terminal.appendChild(h),d.appendChild(this.terminal),null!=this.options.consoleContainer){var k=document.getElementById(this.options.consoleContainer);k.appendChild(d)}else document.body.appendChild(d);a=this.options.commands,b=this.options,c="",e=this.options.commandHistoryCap}function j(){this.inputBox.focus(),this.inputBox.addEventListener("keyup",function(a){var b=a.keyCode||a.which;if(13==b&&""!=this.value){var c=this.value.toLowerCase().trim();this.value="",l(c)}else 38==b?(this.value=d[f],0==f?f=d.length-1:f--):40==b&&(this.value=d[f],f==d.length-1?f=0:f++)})}function k(){var a=document.getElementById("consoleJsTerminal");this.minimizeButton.addEventListener("click",function(b){b.preventDefault(),a.classList.contains("minimize")?a.classList.remove("minimize"):a.classList.add("minimize")})}function l(d){var e=new RegExp(".* man$"),f=!1,h=null;if(e.test(d)&&(f=!0,h=d,d=d.replace(" man","")),("list"==d||"minimize"==d||"maximize"==d)&&b.enableDefaultCommands){if(f)return void n(g[d].toString(),h);switch(d){case"list":q();break;case"minimize":Console.prototype.minimize.call(this),n(null,d);break;case"maximize":Console.prototype.maximize.call(this),n(null,d)}return void o(d)}for(var i=0,j=a.length;i<j;i++){if(d==a[i].command.toLowerCase())return f?void n(a[i].description,h):null!=a[i].requires&&c!=a[i].requires?(n("another command is required first",d),c=d,void o(d)):(m(a[i].action),n(a[i].response,d),c=d,void o(d));if(i==j-1)return n(b.invalidCommandText,d),void o(d)}n(b.invalidCommandText,d),o(d)}function m(a){var b=new Function(a);b()}function n(a,c){function h(){if(!(g>=a.length)){var c=a[g];f.innerHTML=f.innerHTML+c,g++,setTimeout(h,b.typingInterval)}}var d=document.getElementById("terminalHistoryContainer");if(null!=c){var e=document.createElement("p");e.className="previous-command",e.innerHTML=b.consoleCaret+" "+c,d.appendChild(e)}if(""!=a&&null!=a){var f=document.createElement("p");f.className="response",d.appendChild(f),p();var g=0;h()}else p()}function o(a){d.length>=e&&d.shift(),d.push(a),f=d.length-1}function p(){setTimeout(function(){var a=document.getElementById("terminalHistoryContainer");a.scrollTop=a.scrollHeight},5)}function q(){var c="| ";if(b.enableDefaultCommands)for(var d=0,e=Object.keys(g).length;d<e;d++)c=c+Object.keys(g)[d]+" | ";for(var d=0,e=a.length;d<e;d++)c=c+a[d].command+" | ";n.call(this,c,"list")}var a=null,b=null,c=null,d=[],e=0,f=0,g={list:["'list' : lists all commands available in the console"],minimize:["'minimize' : shrinks the console window to the taskbar"],maximize:["'maximize' : expands the console window to its max dimensions"]};this.Console=function(){this.terminal=null,this.inputBox=null,this.minimizeButton=null;var a={consoleContainer:null,theme:"ntsc",introText:"[ -- Console.JS -- ]",instructionText:":: Input 'list' for commands -- Append 'man' to a command for description ::",typingInterval:50,consoleCaret:"// >",commandHistory:!0,commandHistoryCap:5,enableDefaultCommands:!0,invalidCommandText:"command not recognized",commands:[]};arguments[0]&&"object"==typeof arguments[0]?this.options=h(a,arguments[0]):this.options=a},Console.prototype.build=function(){i.call(this),j.call(this),k.call(this)},Console.prototype.maximize=function(){var a=document.getElementById("consoleJsTerminal");a.classList.contains("minimize")&&a.classList.remove("minimize")},Console.prototype.minimize=function(){var a=document.getElementById("consoleJsTerminal");a.classList.contains("minimize")||a.classList.add("minimize")},Console.prototype.pushCommand=function(b){if("object"==typeof b){for(var c=0,d=a.length;c<d;c++)if(b.command.toLowerCase()==a[c].command.toLowerCase())return void console.log("pushNewCommand failed: command "+b.command+" already exists");a.push(b)}else console.error("pushNewCommand failed: did not provide a valid command object")},Console.prototype.removeCommand=function(b){for(var c=0,d=a.length;c<d;c++){if(b.toLowerCase()==a[c].command.toLowerCase()){var e=c;return void a.splice(e,1)}if(c==d-1)return void console.error("removeCommand failed: command "+b+" does not exists")}},Console.prototype.getCommands=function(){return a},Console.prototype.clearHistory=function(a){for(var b=document.getElementById("terminalHistoryContainer");b.firstChild;)b.removeChild(b.firstChild);a&&(d=[])},Console.prototype.pushMessage=function(a){n(a,null)}}();
